
//----------------------------------------------------
// The following code was generated by CUP v0.11a beta 20060608
// Wed Aug 18 21:25:29 CST 2021
//----------------------------------------------------

package gui.editor;

import java_cup.runtime.Symbol;
import java.util.ArrayList;

/** CUP v0.11a beta 20060608 generated parser.
  * @version Wed Aug 18 21:25:29 CST 2021
  */
public class AnalizadorSintacticoCode extends java_cup.runtime.lr_parser {

  /** Default constructor. */
  public AnalizadorSintacticoCode() {super();}

  /** Constructor which sets the default scanner. */
  public AnalizadorSintacticoCode(java_cup.runtime.Scanner s) {super(s);}

  /** Constructor which sets the default scanner. */
  public AnalizadorSintacticoCode(java_cup.runtime.Scanner s, java_cup.runtime.SymbolFactory sf) {super(s,sf);}

  /** Production table. */
  protected static final short _production_table[][] = 
    unpackFromStrings(new String[] {
    "\000\201\000\002\002\004\000\002\002\004\000\002\003" +
    "\004\000\002\003\002\000\002\004\003\000\002\004\003" +
    "\000\002\005\004\000\002\005\002\000\002\006\006\000" +
    "\002\010\003\000\002\010\002\000\002\007\005\000\002" +
    "\007\004\000\002\011\004\000\002\011\004\000\002\011" +
    "\002\000\002\012\005\000\002\012\007\000\002\012\010" +
    "\000\002\012\006\000\002\013\003\000\002\013\002\000" +
    "\002\014\005\000\002\014\005\000\002\014\005\000\002" +
    "\014\005\000\002\014\005\000\002\014\005\000\002\014" +
    "\005\000\002\014\003\000\002\015\003\000\002\015\003" +
    "\000\002\015\003\000\002\015\003\000\002\015\003\000" +
    "\002\015\003\000\002\015\003\000\002\015\003\000\002" +
    "\015\003\000\002\047\006\000\002\051\005\000\002\051" +
    "\003\000\002\052\003\000\002\052\002\000\002\050\004" +
    "\000\002\017\003\000\002\017\003\000\002\017\003\000" +
    "\002\017\003\000\002\017\003\000\002\020\005\000\002" +
    "\020\005\000\002\020\005\000\002\020\005\000\002\020" +
    "\005\000\002\020\004\000\002\020\005\000\002\020\003" +
    "\000\002\021\005\000\002\021\005\000\002\021\005\000" +
    "\002\021\005\000\002\021\005\000\002\021\005\000\002" +
    "\021\003\000\002\022\006\000\002\022\005\000\002\022" +
    "\010\000\002\022\012\000\002\022\007\000\002\022\010" +
    "\000\002\023\006\000\002\023\005\000\002\024\005\000" +
    "\002\024\007\000\002\024\005\000\002\025\005\000\002" +
    "\025\005\000\002\025\003\000\002\025\003\000\002\032" +
    "\006\000\002\032\006\000\002\026\006\000\002\027\007" +
    "\000\002\027\003\000\002\030\006\000\002\030\004\000" +
    "\002\030\003\000\002\030\003\000\002\033\012\000\002" +
    "\053\007\000\002\053\005\000\002\054\003\000\002\055" +
    "\005\000\002\055\005\000\002\055\004\000\002\055\004" +
    "\000\002\034\006\000\002\035\003\000\002\035\003\000" +
    "\002\036\010\000\002\036\003\000\002\037\007\000\002" +
    "\056\007\000\002\056\005\000\002\040\014\000\002\041" +
    "\010\000\002\042\010\000\002\043\005\000\002\044\006" +
    "\000\002\045\006\000\002\057\003\000\002\057\003\000" +
    "\002\057\003\000\002\057\003\000\002\057\003\000\002" +
    "\057\003\000\002\057\003\000\002\057\003\000\002\057" +
    "\003\000\002\057\003\000\002\057\003\000\002\057\003" +
    "\000\002\060\003\000\002\060\003\000\002\060\003\000" +
    "\002\060\003\000\002\060\003\000\002\046\005" });

  /** Access to production table. */
  public short[][] production_table() {return _production_table;}

  /** Parse-action table. */
  protected static final short[][] _action_table = 
    unpackFromStrings(new String[] {
    "\000\135\000\012\002\ufffe\004\006\005\005\006\ufffe\001" +
    "\002\000\012\002\ufffe\004\006\005\005\006\ufffe\001\002" +
    "\000\012\002\ufffc\004\ufffc\005\ufffc\006\ufffc\001\002\000" +
    "\012\002\ufffd\004\ufffd\005\ufffd\006\ufffd\001\002\000\006" +
    "\002\ufffa\006\014\001\002\000\004\002\011\001\002\000" +
    "\004\002\001\001\002\000\006\002\ufffa\006\014\001\002" +
    "\000\004\002\000\001\002\000\004\007\015\001\002\000" +
    "\014\002\ufff7\006\ufff7\010\017\043\ufff7\044\ufff7\001\002" +
    "\000\014\002\ufff8\006\ufff8\011\134\043\ufff8\044\ufff8\001" +
    "\002\000\004\007\133\001\002\000\012\002\ufff2\006\ufff2" +
    "\043\024\044\uffec\001\002\000\004\044\121\001\002\000" +
    "\006\002\ufff9\006\ufff9\001\002\000\014\002\ufff2\006\ufff2" +
    "\011\027\043\024\044\uffec\001\002\000\004\044\uffed\001" +
    "\002\000\012\002\ufff2\006\ufff2\043\024\044\uffec\001\002" +
    "\000\006\002\ufff3\006\ufff3\001\002\000\004\007\031\001" +
    "\002\000\006\002\ufff4\006\ufff4\001\002\000\016\002\ufff1" +
    "\006\ufff1\011\ufff1\043\ufff1\044\ufff1\045\032\001\002\000" +
    "\022\007\046\046\042\047\034\050\033\051\036\052\043" +
    "\053\045\066\040\001\002\000\034\002\uffde\006\uffde\011" +
    "\uffde\035\uffde\036\uffde\037\uffde\040\uffde\041\uffde\042\uffde" +
    "\043\uffde\044\uffde\061\uffde\067\uffde\001\002\000\034\002" +
    "\uffdf\006\uffdf\011\uffdf\035\uffdf\036\uffdf\037\uffdf\040\uffdf" +
    "\041\uffdf\042\uffdf\043\uffdf\044\uffdf\061\uffdf\067\uffdf\001" +
    "\002\000\030\002\ufff0\006\ufff0\011\ufff0\035\104\036\110" +
    "\037\112\040\107\041\106\042\105\043\ufff0\044\ufff0\001" +
    "\002\000\034\002\uffdc\006\uffdc\011\uffdc\035\uffdc\036\uffdc" +
    "\037\uffdc\040\uffdc\041\uffdc\042\uffdc\043\uffdc\044\uffdc\061" +
    "\uffdc\067\uffdc\001\002\000\032\002\uffe4\006\uffe4\011\uffe4" +
    "\035\uffe4\036\uffe4\037\uffe4\040\uffe4\041\uffe4\042\uffe4\043" +
    "\uffe4\044\uffe4\067\uffe4\001\002\000\022\007\046\046\042" +
    "\047\034\050\033\051\036\052\043\053\045\066\040\001" +
    "\002\000\034\002\uffe1\006\uffe1\011\uffe1\035\uffe1\036\uffe1" +
    "\037\uffe1\040\uffe1\041\uffe1\042\uffe1\043\uffe1\044\uffe1\061" +
    "\uffe1\067\uffe1\001\002\000\034\002\uffe0\006\uffe0\011\uffe0" +
    "\035\uffe0\036\uffe0\037\uffe0\040\uffe0\041\uffe0\042\uffe0\043" +
    "\uffe0\044\uffe0\061\uffe0\067\uffe0\001\002\000\034\002\uffdb" +
    "\006\uffdb\011\uffdb\035\uffdb\036\uffdb\037\uffdb\040\uffdb\041" +
    "\uffdb\042\uffdb\043\uffdb\044\uffdb\061\uffdb\067\uffdb\001\002" +
    "\000\034\002\uffe2\006\uffe2\011\uffe2\035\uffe2\036\uffe2\037" +
    "\uffe2\040\uffe2\041\uffe2\042\uffe2\043\uffe2\044\uffe2\061\uffe2" +
    "\067\uffe2\001\002\000\034\002\uffdd\006\uffdd\011\uffdd\035" +
    "\uffdd\036\uffdd\037\uffdd\040\uffdd\041\uffdd\042\uffdd\043\uffdd" +
    "\044\uffdd\061\uffdd\067\uffdd\001\002\000\040\002\uffe3\006" +
    "\uffe3\011\uffe3\035\uffe3\036\uffe3\037\uffe3\040\uffe3\041\uffe3" +
    "\042\uffe3\043\uffe3\044\uffe3\060\051\061\uffe3\066\050\067" +
    "\uffe3\001\002\000\036\002\uffd5\006\uffd5\011\uffd5\035\uffd5" +
    "\036\uffd5\037\uffd5\040\uffd5\041\uffd5\042\uffd5\043\uffd5\044" +
    "\uffd5\060\100\061\uffd5\067\uffd5\001\002\000\024\007\046" +
    "\046\042\047\034\050\033\051\036\052\043\053\045\066" +
    "\054\067\uffd6\001\002\000\022\007\046\046\042\047\034" +
    "\050\033\051\036\052\043\053\045\066\054\001\002\000" +
    "\016\035\056\036\061\040\062\041\060\042\057\061\071" +
    "\001\002\000\022\011\uffc1\035\uffc1\036\uffc1\040\uffc1\041" +
    "\uffc1\042\uffc1\061\uffc1\067\uffc1\001\002\000\022\007\046" +
    "\046\042\047\034\050\033\051\036\052\043\053\045\066" +
    "\054\001\002\000\016\035\056\036\061\040\062\041\060" +
    "\042\057\067\063\001\002\000\022\007\046\046\042\047" +
    "\034\050\033\051\036\052\043\053\045\066\054\001\002" +
    "\000\022\007\046\046\042\047\034\050\033\051\036\052" +
    "\043\053\045\066\054\001\002\000\022\007\046\046\042" +
    "\047\034\050\033\051\036\052\043\053\045\066\054\001" +
    "\002\000\022\007\046\046\042\047\034\050\033\051\036" +
    "\052\043\053\045\066\054\001\002\000\022\007\046\046" +
    "\042\047\034\050\033\051\036\052\043\053\045\066\054" +
    "\001\002\000\022\011\uffc2\035\uffc2\036\uffc2\040\uffc2\041" +
    "\uffc2\042\uffc2\061\uffc2\067\uffc2\001\002\000\022\011\uffc5" +
    "\035\uffc5\036\uffc5\040\uffc5\041\uffc5\042\057\061\uffc5\067" +
    "\uffc5\001\002\000\022\011\uffc6\035\uffc6\036\uffc6\040\062" +
    "\041\060\042\057\061\uffc6\067\uffc6\001\002\000\022\011" +
    "\uffc4\035\uffc4\036\uffc4\040\uffc4\041\uffc4\042\057\061\uffc4" +
    "\067\uffc4\001\002\000\022\011\uffc3\035\uffc3\036\uffc3\040" +
    "\uffc3\041\uffc3\042\uffc3\061\uffc3\067\uffc3\001\002\000\022" +
    "\011\uffc7\035\uffc7\036\uffc7\040\062\041\060\042\057\061" +
    "\uffc7\067\uffc7\001\002\000\036\002\uffb9\006\uffb9\011\uffb9" +
    "\035\uffb9\036\uffb9\037\uffb9\040\uffb9\041\uffb9\042\uffb9\043" +
    "\uffb9\044\uffb9\060\uffb9\061\uffb9\067\uffb9\001\002\000\020" +
    "\011\uffd8\035\056\036\061\040\062\041\060\042\057\067" +
    "\uffd8\001\002\000\004\067\077\001\002\000\006\011\075" +
    "\067\uffd7\001\002\000\022\007\046\046\042\047\034\050" +
    "\033\051\036\052\043\053\045\066\054\001\002\000\020" +
    "\011\uffd9\035\056\036\061\040\062\041\060\042\057\067" +
    "\uffd9\001\002\000\034\002\uffda\006\uffda\011\uffda\035\uffda" +
    "\036\uffda\037\uffda\040\uffda\041\uffda\042\uffda\043\uffda\044" +
    "\uffda\061\uffda\067\uffda\001\002\000\022\007\046\046\042" +
    "\047\034\050\033\051\036\052\043\053\045\066\054\001" +
    "\002\000\016\035\056\036\061\040\062\041\060\042\057" +
    "\061\102\001\002\000\036\002\uffba\006\uffba\011\uffba\035" +
    "\uffba\036\uffba\037\uffba\040\uffba\041\uffba\042\uffba\043\uffba" +
    "\044\uffba\060\uffba\061\uffba\067\uffba\001\002\000\020\035" +
    "\104\036\110\037\112\040\107\041\106\042\105\067\111" +
    "\001\002\000\022\007\046\046\042\047\034\050\033\051" +
    "\036\052\043\053\045\066\040\001\002\000\022\007\046" +
    "\046\042\047\034\050\033\051\036\052\043\053\045\066" +
    "\040\001\002\000\022\007\046\046\042\047\034\050\033" +
    "\051\036\052\043\053\045\066\040\001\002\000\022\007" +
    "\046\046\042\047\034\050\033\051\036\052\043\053\045" +
    "\066\040\001\002\000\022\007\046\046\042\047\034\050" +
    "\033\051\036\052\043\053\045\066\040\001\002\000\032" +
    "\002\uffe5\006\uffe5\011\uffe5\035\uffe5\036\uffe5\037\uffe5\040" +
    "\uffe5\041\uffe5\042\uffe5\043\uffe5\044\uffe5\067\uffe5\001\002" +
    "\000\022\007\046\046\042\047\034\050\033\051\036\052" +
    "\043\053\045\066\040\001\002\000\032\002\uffe9\006\uffe9" +
    "\011\uffe9\035\uffe9\036\uffe9\037\uffe9\040\uffe9\041\uffe9\042" +
    "\105\043\uffe9\044\uffe9\067\uffe9\001\002\000\032\002\uffea" +
    "\006\uffea\011\uffea\035\uffea\036\uffea\037\112\040\107\041" +
    "\106\042\105\043\uffea\044\uffea\067\uffea\001\002\000\032" +
    "\002\uffe8\006\uffe8\011\uffe8\035\uffe8\036\uffe8\037\uffe8\040" +
    "\uffe8\041\uffe8\042\105\043\uffe8\044\uffe8\067\uffe8\001\002" +
    "\000\032\002\uffe7\006\uffe7\011\uffe7\035\uffe7\036\uffe7\037" +
    "\uffe7\040\uffe7\041\uffe7\042\105\043\uffe7\044\uffe7\067\uffe7" +
    "\001\002\000\032\002\uffe6\006\uffe6\011\uffe6\035\uffe6\036" +
    "\uffe6\037\uffe6\040\uffe6\041\uffe6\042\uffe6\043\uffe6\044\uffe6" +
    "\067\uffe6\001\002\000\032\002\uffeb\006\uffeb\011\uffeb\035" +
    "\uffeb\036\uffeb\037\112\040\107\041\106\042\105\043\uffeb" +
    "\044\uffeb\067\uffeb\001\002\000\014\013\127\014\122\015" +
    "\126\016\123\017\124\001\002\000\004\007\uffd4\001\002" +
    "\000\004\007\uffd2\001\002\000\004\007\uffd1\001\002\000" +
    "\004\007\130\001\002\000\004\007\uffd0\001\002\000\004" +
    "\007\uffd3\001\002\000\016\002\uffee\006\uffee\011\uffee\043" +
    "\uffee\044\uffee\045\131\001\002\000\022\007\046\046\042" +
    "\047\034\050\033\051\036\052\043\053\045\066\040\001" +
    "\002\000\030\002\uffef\006\uffef\011\uffef\035\104\036\110" +
    "\037\112\040\107\041\106\042\105\043\uffef\044\uffef\001" +
    "\002\000\014\002\ufff5\006\ufff5\011\ufff5\043\ufff5\044\ufff5" +
    "\001\002\000\004\007\135\001\002\000\014\002\ufff6\006" +
    "\ufff6\011\ufff6\043\ufff6\044\ufff6\001\002\000\004\002\ufffb" +
    "\001\002\000\006\002\uffff\006\uffff\001\002" });

  /** Access to parse-action table. */
  public short[][] action_table() {return _action_table;}

  /** <code>reduce_goto</code> table. */
  protected static final short[][] _reduce_table = 
    unpackFromStrings(new String[] {
    "\000\135\000\010\002\007\003\006\004\003\001\001\000" +
    "\006\003\136\004\003\001\001\000\002\001\001\000\002" +
    "\001\001\000\006\005\012\006\011\001\001\000\002\001" +
    "\001\000\002\001\001\000\006\005\135\006\011\001\001" +
    "\000\002\001\001\000\002\001\001\000\006\007\015\010" +
    "\017\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\011\021\012\022\013\020\016\024\001\001\000\002\001" +
    "\001\000\002\001\001\000\012\011\027\012\022\013\020" +
    "\016\024\001\001\000\002\001\001\000\012\011\025\012" +
    "\022\013\020\016\024\001\001\000\002\001\001\000\002" +
    "\001\001\000\002\001\001\000\002\001\001\000\012\014" +
    "\034\015\036\047\043\050\040\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\014\102\015\036\047\043\050\040" +
    "\001\001\000\002\001\001\000\002\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\004\023\046" +
    "\001\001\000\002\001\001\000\016\015\052\021\071\047" +
    "\043\050\040\051\073\052\072\001\001\000\012\015\052" +
    "\021\051\047\043\050\040\001\001\000\002\001\001\000" +
    "\002\001\001\000\012\015\052\021\054\047\043\050\040" +
    "\001\001\000\002\001\001\000\012\015\052\021\067\047" +
    "\043\050\040\001\001\000\012\015\052\021\066\047\043" +
    "\050\040\001\001\000\012\015\052\021\065\047\043\050" +
    "\040\001\001\000\012\015\052\021\064\047\043\050\040" +
    "\001\001\000\012\015\052\021\063\047\043\050\040\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\002" +
    "\001\001\000\012\015\052\021\075\047\043\050\040\001" +
    "\001\000\002\001\001\000\002\001\001\000\012\015\052" +
    "\021\100\047\043\050\040\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\012\014\117\015\036" +
    "\047\043\050\040\001\001\000\012\014\116\015\036\047" +
    "\043\050\040\001\001\000\012\014\115\015\036\047\043" +
    "\050\040\001\001\000\012\014\114\015\036\047\043\050" +
    "\040\001\001\000\012\014\113\015\036\047\043\050\040" +
    "\001\001\000\002\001\001\000\012\014\112\015\036\047" +
    "\043\050\040\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\004\017\124\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001\000\002\001\001\000" +
    "\002\001\001\000\002\001\001\000\002\001\001\000\012" +
    "\014\131\015\036\047\043\050\040\001\001\000\002\001" +
    "\001\000\002\001\001\000\002\001\001\000\002\001\001" +
    "\000\002\001\001\000\002\001\001" });

  /** Access to <code>reduce_goto</code> table. */
  public short[][] reduce_table() {return _reduce_table;}

  /** Instance of action encapsulation class. */
  protected CUP$AnalizadorSintacticoCode$actions action_obj;

  /** Action encapsulation object initializer. */
  protected void init_actions()
    {
      action_obj = new CUP$AnalizadorSintacticoCode$actions(this);
    }

  /** Invoke a user supplied parse action. */
  public java_cup.runtime.Symbol do_action(
    int                        act_num,
    java_cup.runtime.lr_parser parser,
    java.util.Stack            stack,
    int                        top)
    throws java.lang.Exception
  {
    /* call code in generated class */
    return action_obj.CUP$AnalizadorSintacticoCode$do_action(act_num, parser, stack, top);
  }

  /** Indicates start state. */
  public int start_state() {return 0;}
  /** Indicates start production. */
  public int start_production() {return 0;}

  /** <code>EOF</code> Symbol index. */
  public int EOF_sym() {return 0;}

  /** <code>error</code> Symbol index. */
  public int error_sym() {return 1;}



    //codigo


}

/** Cup generated class to encapsulate user supplied action code.*/
class CUP$AnalizadorSintacticoCode$actions {


    

  private final AnalizadorSintacticoCode parser;

  /** Constructor */
  CUP$AnalizadorSintacticoCode$actions(AnalizadorSintacticoCode parser) {
    this.parser = parser;
  }

  /** Method with the actual generated action code. */
  public final java_cup.runtime.Symbol CUP$AnalizadorSintacticoCode$do_action(
    int                        CUP$AnalizadorSintacticoCode$act_num,
    java_cup.runtime.lr_parser CUP$AnalizadorSintacticoCode$parser,
    java.util.Stack            CUP$AnalizadorSintacticoCode$stack,
    int                        CUP$AnalizadorSintacticoCode$top)
    throws java.lang.Exception
    {
      /* Symbol object for return from actions */
      java_cup.runtime.Symbol CUP$AnalizadorSintacticoCode$result;

      /* select the action based on the action number */
      switch (CUP$AnalizadorSintacticoCode$act_num)
        {
          /*. . . . . . . . . . . . . . . . . . . .*/
          case 128: // struct_principal ::= PRINCIPAL PA_A PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_principal",36, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 127: // tipo_orden ::= PRIMOS 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_orden",46, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 126: // tipo_orden ::= IMPARES 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_orden",46, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 125: // tipo_orden ::= PARES 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_orden",46, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 124: // tipo_orden ::= DESCENDENTE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_orden",46, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 123: // tipo_orden ::= ASCENDENTE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_orden",46, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 122: // notas ::= LA_S 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 121: // notas ::= SOL_S 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 120: // notas ::= FA_S 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 119: // notas ::= RE_S 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 118: // notas ::= DO_S 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 117: // notas ::= SI 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 116: // notas ::= LA 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 115: // notas ::= SOL 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 114: // notas ::= FA 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 113: // notas ::= MI 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 112: // notas ::= RE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 111: // notas ::= DO 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("notas",45, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 110: // struct_mensaje ::= MENSAJE PA_A struct_valor_logico PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_mensaje",35, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 109: // struct_longitud ::= LONGITUD PA_A valor_operacion PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_longitud",34, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 108: // struct_sumarizar ::= SUMARIZAR PA_A PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_sumarizar",33, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 107: // struct_ordenar ::= ORDENAR PA_A IDENTIFICADOR COMA tipo_orden PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_ordenar",32, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-5)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 106: // struct_esperar ::= ESPERAR PA_A valor_operacion COMA valor_operacion PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_esperar",31, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-5)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 105: // struct_reproducir ::= REPRODUCIR PA_A notas COMA valor_operacion COMA valor_operacion COMA valor_operacion PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_reproducir",30, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-9)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 104: // struct_parametros ::= VAR tipo_dato IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_parametros",44, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 103: // struct_parametros ::= struct_parametros COMA VAR tipo_dato IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_parametros",44, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 102: // struct_procedimiento ::= keep_state IDENTIFICADOR PA_A struct_parametros PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_procedimiento",29, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 101: // struct_funcion ::= RETORNAR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_funcion",28, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 100: // struct_funcion ::= keep_state tipo_dato IDENTIFICADOR PA_A struct_parametros PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_funcion",28, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-5)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 99: // struct_hacer ::= CONTINUAR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_hacer",27, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 98: // struct_hacer ::= HACER 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_hacer",27, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 97: // struct_mientras ::= MIENTRAS PA_A struct_valor_logico PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_mientras",26, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 96: // incremento_para ::= IDENTIFICADOR MENOS_MENOS 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("incremento_para",43, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 95: // incremento_para ::= IDENTIFICADOR MAS_MAS 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("incremento_para",43, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 94: // incremento_para ::= IDENTIFICADOR MAS_IGUAL valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("incremento_para",43, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 93: // incremento_para ::= IDENTIFICADOR IGUAL valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("incremento_para",43, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 92: // condicion_para ::= struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("condicion_para",42, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 91: // para_asig_var ::= IDENTIFICADOR IGUAL valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("para_asig_var",41, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 90: // para_asig_var ::= VAR tipo_dato IDENTIFICADOR IGUAL valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("para_asig_var",41, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 89: // struct_para ::= PARA PA_A para_asig_var PUNTO_COMA condicion_para PUNTO_COMA incremento_para PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_para",25, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-7)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 88: // struct_switch ::= DEFAULT 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_switch",22, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 87: // struct_switch ::= SALIR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_switch",22, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 86: // struct_switch ::= CASO valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_switch",22, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 85: // struct_switch ::= SWITCH PA_A IDENTIFICADOR PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_switch",22, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 84: // struct_sino ::= SINO 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_sino",21, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 83: // struct_sino ::= SINO SI PA_A struct_valor_logico PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_sino",21, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 82: // struct_si ::= SI PA_A struct_valor_logico PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_si",20, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 81: // struct_asig_arreglo ::= IDENTIFICADOR dim_arreglo IGUAL struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_asig_arreglo",24, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 80: // struct_asig_arreglo ::= IDENTIFICADOR dim_arreglo IGUAL valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_asig_arreglo",24, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 79: // valores_array ::= struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valores_array",19, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 78: // valores_array ::= valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valores_array",19, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 77: // valores_array ::= valores_array COMA struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valores_array",19, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 76: // valores_array ::= valores_array COMA valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valores_array",19, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 75: // valor_arreglo ::= LLAVE_A valores_array LLAVE_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_arreglo",18, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 74: // valor_arreglo ::= LLAVE_A valores_array LLAVE_C COMA valor_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_arreglo",18, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 73: // valor_arreglo ::= LLAVE_A valor_arreglo LLAVE_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_arreglo",18, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 72: // dim_arreglo ::= CORCHETE_A valor_operacion CORCHETE_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("dim_arreglo",17, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 71: // dim_arreglo ::= dim_arreglo CORCHETE_A valor_operacion CORCHETE_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("dim_arreglo",17, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 70: // struct_declaracion_array ::= keep_state VAR tipo_dato ARREGLO IDENTIFICADOR dim_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_array",16, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-5)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 69: // struct_declaracion_array ::= keep_state VAR tipo_dato ARREGLO IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_array",16, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 68: // struct_declaracion_array ::= keep_state VAR tipo_dato ARREGLO IDENTIFICADOR dim_arreglo IGUAL valor_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_array",16, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-7)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 67: // struct_declaracion_array ::= struct_declaracion_array COMA IDENTIFICADOR dim_arreglo IGUAL valor_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_array",16, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-5)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 66: // struct_declaracion_array ::= struct_declaracion_array COMA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_array",16, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 65: // struct_declaracion_array ::= struct_declaracion_array COMA IDENTIFICADOR dim_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_array",16, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 64: // valor_operacion ::= valor 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 63: // valor_operacion ::= PA_A valor_operacion PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 62: // valor_operacion ::= valor_operacion POTENCIA valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 61: // valor_operacion ::= valor_operacion MODULO valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 60: // valor_operacion ::= valor_operacion DIVISION valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 59: // valor_operacion ::= valor_operacion MENOS valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 58: // valor_operacion ::= valor_operacion MAS valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_operacion",15, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 57: // struct_valor_logico ::= valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 56: // struct_valor_logico ::= PA_A struct_valor_logico PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 55: // struct_valor_logico ::= NOT struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 54: // struct_valor_logico ::= struct_valor_logico NAND struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 53: // struct_valor_logico ::= struct_valor_logico AND struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 52: // struct_valor_logico ::= struct_valor_logico XOR struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 51: // struct_valor_logico ::= struct_valor_logico NOR struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 50: // struct_valor_logico ::= struct_valor_logico OR struct_valor_logico 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_valor_logico",14, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 49: // tipo_dato ::= BOOLEAN 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_dato",13, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 48: // tipo_dato ::= CADENA_RSV 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_dato",13, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 47: // tipo_dato ::= CARACTER_RSV 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_dato",13, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 46: // tipo_dato ::= ENTERO 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_dato",13, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 45: // tipo_dato ::= DOBLE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("tipo_dato",13, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 44: // struct_llamada_arreglo ::= IDENTIFICADOR dim_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_llamada_arreglo",38, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 43: // state_params ::= 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("state_params",40, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 42: // state_params ::= parametros 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("state_params",40, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 41: // parametros ::= valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("parametros",39, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 40: // parametros ::= parametros COMA valor_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("parametros",39, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 39: // strunt_llamada_funcion ::= IDENTIFICADOR PA_A state_params PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("strunt_llamada_funcion",37, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 38: // valor ::= FALSE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 37: // valor ::= TRUE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 36: // valor ::= CARACTER 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 35: // valor ::= CADENA 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 34: // valor ::= DECIMAL 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 33: // valor ::= NUMERO 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 32: // valor ::= struct_llamada_arreglo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 31: // valor ::= strunt_llamada_funcion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 30: // valor ::= IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor",11, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 29: // valor_declaracion_operacion ::= valor 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 28: // valor_declaracion_operacion ::= PA_A valor_declaracion_operacion PA_C 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 27: // valor_declaracion_operacion ::= valor_declaracion_operacion POTENCIA valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 26: // valor_declaracion_operacion ::= valor_declaracion_operacion MODULO valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 25: // valor_declaracion_operacion ::= valor_declaracion_operacion DIVISION valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 24: // valor_declaracion_operacion ::= valor_declaracion_operacion POR valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 23: // valor_declaracion_operacion ::= valor_declaracion_operacion MENOS valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 22: // valor_declaracion_operacion ::= valor_declaracion_operacion MAS valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("valor_declaracion_operacion",10, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 21: // keep_state ::= 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("keep_state",9, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 20: // keep_state ::= KEEP 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("keep_state",9, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 19: // struct_declaracion_var ::= keep_state VAR tipo_dato IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_var",8, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 18: // struct_declaracion_var ::= keep_state VAR tipo_dato IDENTIFICADOR IGUAL valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_var",8, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-5)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 17: // struct_declaracion_var ::= struct_declaracion_var COMA IDENTIFICADOR IGUAL valor_declaracion_operacion 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_var",8, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-4)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 16: // struct_declaracion_var ::= struct_declaracion_var COMA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_declaracion_var",8, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 15: // struc_code ::= 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struc_code",7, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 14: // struc_code ::= struc_asig_var struc_code 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struc_code",7, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 13: // struc_code ::= struct_declaracion_var struc_code 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struc_code",7, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 12: // struct_extiende ::= EXTIENDE IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_extiende",5, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 11: // struct_extiende ::= struct_extiende COMA IDENTIFICADOR 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_extiende",5, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-2)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 10: // extiende_state ::= 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("extiende_state",6, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 9: // extiende_state ::= struct_extiende 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("extiende_state",6, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 8: // struct_pista ::= PISTA IDENTIFICADOR extiende_state struc_code 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("struct_pista",4, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-3)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 7: // codigo ::= 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("codigo",3, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 6: // codigo ::= struct_pista codigo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("codigo",3, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 5: // comentarios ::= COMENTARIO_BLOQUE 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("comentarios",2, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 4: // comentarios ::= COMENTARIO_LINEA 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("comentarios",2, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 3: // blanco ::= 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("blanco",1, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 2: // blanco ::= comentarios blanco 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("blanco",1, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 1: // INICIO ::= blanco codigo 
            {
              Object RESULT =null;

              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("INICIO",0, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          return CUP$AnalizadorSintacticoCode$result;

          /*. . . . . . . . . . . . . . . . . . . .*/
          case 0: // $START ::= INICIO EOF 
            {
              Object RESULT =null;
		int start_valleft = ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)).left;
		int start_valright = ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)).right;
		Object start_val = (Object)((java_cup.runtime.Symbol) CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)).value;
		RESULT = start_val;
              CUP$AnalizadorSintacticoCode$result = parser.getSymbolFactory().newSymbol("$START",0, ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.elementAt(CUP$AnalizadorSintacticoCode$top-1)), ((java_cup.runtime.Symbol)CUP$AnalizadorSintacticoCode$stack.peek()), RESULT);
            }
          /* ACCEPT */
          CUP$AnalizadorSintacticoCode$parser.done_parsing();
          return CUP$AnalizadorSintacticoCode$result;

          /* . . . . . .*/
          default:
            throw new Exception(
               "Invalid action number found in internal parse table");

        }
    }
}

